package uavcam
public
	--with Electricity_Properties;
	with uavcam::dispositivos;

	with uavcam::tipo_de_dados;
	with uavcam::threads_file;

    with Buses::I2C;
    with buses::pwm;
	--with buses::misc;
	with buses::USB;
	with Buses::UART;
	with Buses::SPI;
------------
-- System --
------------
	system UAVGimbal
	end UAVGimbal;

	system implementation UAVGimbal.with_devices
		subcomponents
			this_servo_roll: device uavcam::dispositivos::Servo_Motor.impl;
			this_servo_pitch: device uavcam::dispositivos::Servo_Motor.impl;
			this_servo_yaw: device uavcam::dispositivos::Servo_Motor.impl;
			this_imu: device uavcam::dispositivos::MPU6050;
			this_camera: device uavcam::dispositivos::camera;
			this_sd_card: device uavcam::dispositivos::SD_card;
			this_UAV: device uavcam::dispositivos::UAV;
			this_gimbal_control: process gimbal_control;
			this_processor: processor MainProcessor.impl;
			this_bus: bus Connection_Bus.impl;
			this_i2c_bus: bus BUSES::I2C::I2C;
			this_pwm_bus: bus buses::pwm::pwm;
			this_usb_cam: bus buses::USB::USB;
			this_uart_bus: bus Buses::UART::UART;
			this_spi_bus: bus Buses::SPI::SPI;
		connections
			-- ports
			bus_pwm_conn1: port this_gimbal_control.PWM_Serv_Roll_out -> this_servo_roll.PWM_Serv;
			bus_pwm_conn2: port this_gimbal_control.PWM_Serv_Pitch_out -> this_servo_pitch.PWM_Serv;
			bus_pwm_conn3: port this_gimbal_control.PWM_Serv_Yaw_out -> this_servo_yaw.PWM_Serv;
			
			bus_imu_conn: port this_imu.DOF6-> this_gimbal_control.Attitude_in;
			
			bus_cam_conn: port this_camera.cam_stream_out -> this_gimbal_control.camera_stream_in;
			
			sd_card_conn: port this_gimbal_control.store_data_out -> this_sd_card.store_data_in;
			
			uav_radio_conn: port this_UAV.radio_controller -> this_gimbal_control.radio_controller_in;
			uav_cam_conn: port this_gimbal_control.cam_low_res_out -> this_UAV.cam_low_res;
			uav_status_conn: port this_gimbal_control.sys_status_out -> this_UAV.sys_status;
			
			-- buses
			
			-- Processor to memory
			bus_processor: bus access this_bus -> this_processor.bus_access;
			
			
			-- Processor to bus
			bus_processor_i2c: bus access this_i2c_bus <-> this_processor.i2c_bus;
			bus_processor_pwm: bus access this_pwm_bus -> this_processor.pwm_bus;
			bus_processor_usb: bus access this_usb_cam <-> this_processor.usb_bus;			
			bus_processor_uart: bus access this_uart_bus <-> this_processor.uart_bus;
			bus_processor_spi_bus: bus access this_spi_bus <-> this_processor.spi_bus;
			
			
			-- Bus to devices
			bus_imu: bus access this_i2c_bus <-> this_imu.i2c_bus;
			bus_servo_roll: bus access this_pwm_bus -> this_servo_roll.pwm_bus;
			bus_servo_pitch: bus access this_pwm_bus -> this_servo_pitch.pwm_bus;
			bus_servo_yaw: bus access this_pwm_bus -> this_servo_yaw.pwm_bus;
			bus_camera: bus access this_usb_cam <-> this_camera.Cam_Serial_Wire;
			bus_uav: bus access this_uart_bus <-> this_uav.UAV_Serial_Wire;
			bus_sd_card: bus access this_spi_bus <-> this_sd_card.SD_card_Serial_Wire;
			
			-- Power supply bus
			--bus_processor_usb_sup: bus access this_usb_sup -> this_processor.Supply_in;
			
			-- Alimentação 5V
			--bus_sup_cam: bus access this_usb_sup -> this_camera.Supply;
			
		--properties
    		--Concurrency_Control_Protocol => Priority_Ceiling applies to uavcam::threads_file::receive_radio;
	end UAVGimbal.with_devices;

-------------
-- Process --
-------------
	process gimbal_control
		features
			PWM_Serv_Roll_out: out data port uavcam::tipo_de_dados::PWM_Rate;
			PWM_Serv_Pitch_out: out data port uavcam::tipo_de_dados::PWM_Rate;
			PWM_Serv_Yaw_out: out data port uavcam::tipo_de_dados::PWM_Rate;
			
			Attitude_in: in data port uavcam::tipo_de_dados::Six_Axis.impl;
			
			camera_stream_in: in data port uavcam::tipo_de_dados::Camera_Frame.impl;
			
			store_data_out: out data port uavcam::tipo_de_dados::Store_Data.impl;			
			
			radio_controller_in: in data port uavcam::tipo_de_dados::Target_Position.impl;
			cam_low_res_out: out data port uavcam::tipo_de_dados::Camera_Low_Res.impl;
			sys_status_out: out data port uavcam::tipo_de_dados::System_Status.impl;
						
	end gimbal_control;

	process implementation gimbal_control.with_threads
		subcomponents
			this_thread_radio_command: thread uavcam::threads_file::get_radio_command;
			this_thread_attitude: thread uavcam::threads_file::get_attitude;
			this_thread_control_servos: thread uavcam::threads_file::control_servos;
			this_thread_process_video: thread uavcam::threads_file::process_video;
			this_thread_health_mgr: thread uavcam::threads_file::health_mgr;
		connections
			radio_command_thread_conn: port radio_controller_in -> this_thread_radio_command.Target_Position_in;
			attitude_in_conn: port Attitude_in -> this_thread_attitude.Attitude_IMU;
			command_conn: port this_thread_radio_command.Target_Position_Out -> this_thread_attitude.Radio_Command_in;
			movement_conn: port this_thread_attitude.Move_Servos_Out -> this_thread_control_servos.Move_Servos_In;
			cam_stream_conn: port camera_stream_in -> this_thread_process_video.video_from_camera;
			store_video_conn: port this_thread_process_video.video_to_sd_card -> store_data_out;
			send_video_conn: port this_thread_process_video.video_to_uav -> cam_low_res_out;
			send_status_conn: port this_thread_health_mgr.status_to_uav -> sys_status_out;
			
			-- Conectar a saída do video da Camera de Baixa Resolução com a Thread de tratamento de imagem
			--video_in_conn: port cam_low_res_in -> this_thread_process_video.video_from_camera;
			
			
			send_pwm_roll_conn: port this_thread_control_servos.Move_Roll_Out -> PWM_Serv_Roll_out;
			send_pwm_pitch_conn: port this_thread_control_servos.Move_Pitch_Out -> PWM_Serv_Pitch_out;
			send_pwm_yaw_conn: port this_thread_control_servos.Move_Yaw_Out -> PWM_Serv_Yaw_out;
	end gimbal_control.with_threads;

---------------
-- Processor --
---------------
	processor MainProcessor
		features
			bus_access: requires bus access uavcam::Connection_Bus;
			i2c_bus: requires bus access Buses::I2C::I2C;
			pwm_bus: requires bus access buses::pwm::pwm;
			usb_bus: requires bus access buses::USB::USB.impl;
			uart_bus: requires bus access buses::UART::UART.impl;
			spi_bus: requires bus access buses::SPI::SPI.impl;
			--Supply_in : requires bus access buses::Misc::V5_bus.impl;
	end MainProcessor;

	processor implementation MainProcessor.impl
		subcomponents
			this_ram: memory Ram;
			--this_sd_card: memory SD_card;
		properties
    		Scheduling_Protocol => (POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL);		
	end MainProcessor.impl;

-------------------
-- Shared Memory --
-------------------
	memory Ram
	end Ram;
	
	bus Connection_Bus
	end Connection_Bus;

	bus implementation Connection_Bus.impl
	end Connection_Bus.impl;

end uavcam;
